- # If we are reversing the merge, we still create a form for the
- # duplicate contact, but pass in the hidden 'reverse_merge' param.
- reverse_merge        = params[:reverse_merge] == "true"

- c = [@contact, @master_contact]
- duplicate, master    = reverse_merge ? c.reverse : c

- duplicate_attributes = contact_merge_attributes(duplicate)
- master_attributes    = contact_merge_attributes(master)
- default_merge        = calculate_default_merge(duplicate_attributes, master_attributes)

.remote
  = form_for(@contact, :url => merge_contact_path(@contact.id, @master_contact.id), :html => one_submit_only(:contact), :remote => true) do |f|
    = link_to_close edit_contact_path(@contact)
    = f.error_messages
    = hidden_field_tag(:reverse_merge, reverse_merge)
    %h2 Merge "#{duplicate.name}" into "#{master.name}"
    %h3
      = link_to(t('switch_duplicate_and_master').html_safe, "#", :onclick => "crm.load_merge_form('contacts', '#{@master_contact.id}', '#{@contact.id}', #{!reverse_merge});")
    .subtitle{ :style => "width:95%; padding:3px;" }
      = t(:merge_into_info)
    .section
      #merge_into
        %table{ :cellpadding => "3px", :style => "text-align:left; border-collapse: collapse; border: none;" }
          %tr
            %th
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:duplicate_asset, :asset => t(:contact))}: #{duplicate.name} at #{duplicate.account.name}"
            %th{ :valign => :top, :style => "font-size: 13px;", :width => "40%" }
              = "#{t(:master_asset, :asset => t(:contact))}: #{master.name} at #{master.account.name}"
            - ordered_contact_merge_attributes.each do |attribute|
              - duplicate_value, master_value = duplicate_attributes[attribute], master_attributes[attribute]
              - unless duplicate_value.blank? and master_value.blank?
                %tr{ :style => "border-bottom:1px dotted silver;"}
                  %th{ :width => "20%" }
                    .label #{attribute.humanize}
                  %td
                    = ignore_merge_radio_button("no",  attribute, default_merge[attribute]) unless duplicate_value.blank?
                    .label{:style => "display: inline;"} #{duplicate_value}
                  %td
                    = ignore_merge_radio_button("yes", attribute, default_merge[attribute]) unless master_value.blank?
                    .label{:style => "display: inline;"} #{master_value}

    = render :partial => "shared/merge_custom_fields", :locals => {:master => master, :duplicate => duplicate}

    .section
      %h2 Additional data will also be merged
      %ul
        -#%li(style="list-style: disc inside") (<strong>#{AccountContact.where(:contact_id => duplicate.id).count}</strong>) accounts
        %li(style="list-style: disc inside") (<strong>#{duplicate.tasks.size}</strong>) tasks
        %li(style="list-style: disc inside") (<strong>#{duplicate.emails.size}</strong>) emails
        %li(style="list-style: disc inside") (<strong>#{duplicate.comments.size}</strong>) comments
        %li(style="list-style: disc inside") (<strong>#{duplicate.addresses.size}</strong>) addresses
        %li(style="list-style: disc inside") (<strong>#{duplicate.contact_groups.size}</strong>) contact groups
        %li(style="list-style: disc inside") (<strong>#{duplicate.attendances.size}</strong>) event attendances
        %li(style="list-style: disc inside") (<strong>#{duplicate.registrations.size}</strong>) event registrations

    .buttonbar
      = f.submit t(:merge_assets, :assets => t(:contacts)), :onclick => "var check=confirm('#{t('confirm_assets_merge', :assets => t(:contacts))}'); if(!check){return false;};"
      #{t :or}
      = link_to_cancel edit_contact_path(@contact)
